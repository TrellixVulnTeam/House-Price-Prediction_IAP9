[2022-07-26 11:14:33,790] INFO - config.py - 220 - get_training_pipeline_config - Training pipleine config: TrainingPipelineConfig(artifact_dir='D:\\Github Repos\\House-Price-Prediction\\housing\\artifact')
[2022-07-26 11:14:33,790] INFO - pipeline.py - 117 - run_pipeline - Pipeline starting.
[2022-07-26 11:14:33,790] INFO - pipeline.py - 133 - run_pipeline - Pipeline experiment: Experiment(experiment_id='e2638e9c-3ed3-4098-a151-e87fcb2ec58b', initialization_timestamp='2022-07-26-11-14-30', artifact_time_stamp='2022-07-26-11-14-30', running_status=True, start_time=datetime.datetime(2022, 7, 26, 11, 14, 33, 790807), stop_time=None, execution_time=None, message='Pipeline has been started.', experiment_file_path='D:\\Github Repos\\House-Price-Prediction\\housing\\artifact\\experiment\\experiment.csv', accuracy=None, is_model_accepted=None)
[2022-07-26 11:14:33,823] INFO - config.py - 64 - get_data_ingestion_config - Data Ingestion config: DataIngestionConfig(dataset_download_url='https://raw.githubusercontent.com/ageron/handson-ml/master/datasets/housing/housing.tgz', tgz_download_dir='D:\\Github Repos\\House-Price-Prediction\\housing\\artifact\\data_ingestion\\2022-07-26-11-14-30\\tgz_data', raw_data_dir='D:\\Github Repos\\House-Price-Prediction\\housing\\artifact\\data_ingestion\\2022-07-26-11-14-30\\raw_data', ingested_train_dir='D:\\Github Repos\\House-Price-Prediction\\housing\\artifact\\data_ingestion\\2022-07-26-11-14-30\\ingested_data\\train', ingested_test_dir='D:\\Github Repos\\House-Price-Prediction\\housing\\artifact\\data_ingestion\\2022-07-26-11-14-30\\ingested_data\\test')
[2022-07-26 11:14:33,823] INFO - data_ingestion.py - 16 - __init__ - ====================Data Ingestion log started.====================
[2022-07-26 11:14:33,839] INFO - data_ingestion.py - 36 - download_housing_data - Downloading file from :[https://raw.githubusercontent.com/ageron/handson-ml/master/datasets/housing/housing.tgz] into [D:\Github Repos\House-Price-Prediction\housing\artifact\data_ingestion\2022-07-26-11-14-30\tgz_data\housing.tgz]
[2022-07-26 11:14:34,568] INFO - data_ingestion.py - 38 - download_housing_data - File :[D:\Github Repos\House-Price-Prediction\housing\artifact\data_ingestion\2022-07-26-11-14-30\tgz_data\housing.tgz] has been downloaded successfully
[2022-07-26 11:14:34,568] INFO - data_ingestion.py - 52 - extract_tgz_file - Extracting files from :[D:\Github Repos\House-Price-Prediction\housing\artifact\data_ingestion\2022-07-26-11-14-30\tgz_data\housing.tgz] into [D:\Github Repos\House-Price-Prediction\housing\artifact\data_ingestion\2022-07-26-11-14-30\raw_data]
[2022-07-26 11:14:34,600] INFO - data_ingestion.py - 55 - extract_tgz_file - File :[D:\Github Repos\House-Price-Prediction\housing\artifact\data_ingestion\2022-07-26-11-14-30\tgz_data\housing.tgz] has been extracted successfully
[2022-07-26 11:14:34,600] INFO - data_ingestion.py - 67 - split_data_as_train_test - Reading csv file from [D:\Github Repos\House-Price-Prediction\housing\artifact\data_ingestion\2022-07-26-11-14-30\raw_data\housing.csv]
[2022-07-26 11:14:34,675] INFO - data_ingestion.py - 77 - split_data_as_train_test - Proceeding to split data into train and test.
[2022-07-26 11:14:34,700] INFO - data_ingestion.py - 99 - split_data_as_train_test - Exporting training dataset to file :[D:\Github Repos\House-Price-Prediction\housing\artifact\data_ingestion\2022-07-26-11-14-30\ingested_data\train\housing.csv]
[2022-07-26 11:14:34,850] INFO - data_ingestion.py - 104 - split_data_as_train_test - Exporting testing dataset to file :[D:\Github Repos\House-Price-Prediction\housing\artifact\data_ingestion\2022-07-26-11-14-30\ingested_data\test\housing.csv]
[2022-07-26 11:14:34,883] INFO - data_ingestion.py - 111 - split_data_as_train_test - Data Ingestion Artifact :[DataIngestionArtifact(train_file_path='D:\\Github Repos\\House-Price-Prediction\\housing\\artifact\\data_ingestion\\2022-07-26-11-14-30\\ingested_data\\train\\housing.csv', test_file_path='D:\\Github Repos\\House-Price-Prediction\\housing\\artifact\\data_ingestion\\2022-07-26-11-14-30\\ingested_data\\test\\housing.csv', is_ingested=True, message='Data ingestion completed successfully.')]
[2022-07-26 11:14:34,883] INFO - data_ingestion.py - 128 - __del__ - ====================Data Ingestion log completed.====================
[2022-07-26 11:14:34,883] INFO - data_validation.py - 20 - __init__ - ====================Data Validation log started.====================
[2022-07-26 11:14:34,883] INFO - data_validation.py - 40 - is_train_test_file_exists - Checking if training and test file is available
[2022-07-26 11:14:34,883] INFO - data_validation.py - 52 - is_train_test_file_exists - Is train and test file exists? -> True
[2022-07-26 11:14:34,883] INFO - data_validation.py - 68 - validate_dataset_schema - Checking if training and test file fits the schema.
[2022-07-26 11:14:34,883] INFO - data_validation.py - 29 - get_train_and_test_df - Proceeding to get train and test datasets for validations.
[2022-07-26 11:14:34,948] INFO - data_validation.py - 32 - get_train_and_test_df - Train and test datasets extracted as dataframes.
[2022-07-26 11:14:34,956] INFO - data_validation.py - 96 - validate_dataset_schema - Is the datasets as per schema? -> True
[2022-07-26 11:14:34,956] INFO - data_validation.py - 104 - get_and_save_data_drift_report - Proceeding to get train and test datasets drift analysis.
[2022-07-26 11:14:34,956] INFO - data_validation.py - 29 - get_train_and_test_df - Proceeding to get train and test datasets for validations.
[2022-07-26 11:14:35,000] INFO - data_validation.py - 32 - get_train_and_test_df - Train and test datasets extracted as dataframes.
[2022-07-26 11:14:35,126] INFO - data_validation.py - 119 - get_and_save_data_drift_report - Dataset drift analysis completed.
[2022-07-26 11:14:35,126] INFO - data_validation.py - 126 - save_data_drift_report_page - Proceeding to save drift analysis reports.
[2022-07-26 11:14:35,126] INFO - data_validation.py - 29 - get_train_and_test_df - Proceeding to get train and test datasets for validations.
[2022-07-26 11:14:35,174] INFO - data_validation.py - 32 - get_train_and_test_df - Train and test datasets extracted as dataframes.
[2022-07-26 11:14:36,041] INFO - data_validation.py - 136 - save_data_drift_report_page - Dataset drift analysis report saved successfully.
[2022-07-26 11:14:36,041] INFO - data_validation.py - 148 - is_data_drift_found - Does drift analysis report exists? -> True
[2022-07-26 11:14:36,041] INFO - data_validation.py - 165 - initiate_data_validation - Data validation artifact: DataValidationArtifact(schema_file_path='D:\\Github Repos\\House-Price-Prediction\\config\\schema.yaml', report_file_path='D:\\Github Repos\\House-Price-Prediction\\housing\\artifact\\data_validation\\2022-07-26-11-14-30\\report.json', report_page_file_path='D:\\Github Repos\\House-Price-Prediction\\housing\\artifact\\data_validation\\2022-07-26-11-14-30\\report.html', is_validated=True, message='Data Validation performed successully.')
[2022-07-26 11:14:36,041] INFO - data_validation.py - 171 - __del__ - ====================Data Validation log completed.====================
[2022-07-26 11:14:36,041] INFO - config.py - 145 - get_data_transformation_config - Data transformation config: DataTransformationConfig(add_bedroom_per_room=True, transformed_train_dir='D:\\Github Repos\\House-Price-Prediction\\housing\\artifact\\data_transformation\\2022-07-26-11-14-30\\transformed_data\\train', transformed_test_dir='D:\\Github Repos\\House-Price-Prediction\\housing\\artifact\\data_transformation\\2022-07-26-11-14-30\\transformed_data\\test', preprocessed_object_file_path='D:\\Github Repos\\House-Price-Prediction\\housing\\artifact\\data_transformation\\2022-07-26-11-14-30\\preprocessed\\preprocessed.pkl')
[2022-07-26 11:14:36,041] INFO - data_transformation.py - 77 - __init__ - ====================Data Transformation log started.==================== 
[2022-07-26 11:14:36,041] INFO - data_transformation.py - 128 - initiate_data_transformation - Obtaining preprocessing object.
[2022-07-26 11:14:36,056] INFO - data_transformation.py - 112 - get_data_transformer_object - Categorical columns: ['ocean_proximity']
[2022-07-26 11:14:36,056] INFO - data_transformation.py - 113 - get_data_transformer_object - Numerical columns: ['longitude', 'latitude', 'housing_median_age', 'total_rooms', 'total_bedrooms', 'population', 'households', 'median_income']
[2022-07-26 11:14:36,056] INFO - data_transformation.py - 132 - initiate_data_transformation - Obtaining training and test file path.
[2022-07-26 11:14:36,056] INFO - data_transformation.py - 139 - initiate_data_transformation - Loading training and test data as pandas dataframe.
[2022-07-26 11:14:36,115] INFO - data_transformation.py - 149 - initiate_data_transformation - Splitting input and target feature from training and testing dataframe.
[2022-07-26 11:14:36,115] INFO - data_transformation.py - 157 - initiate_data_transformation - Applying preprocessing object on training dataframe and testing dataframe
[2022-07-26 11:14:36,183] INFO - data_transformation.py - 175 - initiate_data_transformation - Saving transformed training and testing array.
[2022-07-26 11:14:36,191] INFO - data_transformation.py - 182 - initiate_data_transformation - Saving preprocessing object.
[2022-07-26 11:14:36,191] INFO - data_transformation.py - 192 - initiate_data_transformation - Data transformationa artifact: DataTransformationArtifact(is_transformed=True, message='Data transformation successfull.', transformed_train_file_path='D:\\Github Repos\\House-Price-Prediction\\housing\\artifact\\data_transformation\\2022-07-26-11-14-30\\transformed_data\\train\\housing.npz', transformed_test_file_path='D:\\Github Repos\\House-Price-Prediction\\housing\\artifact\\data_transformation\\2022-07-26-11-14-30\\transformed_data\\test\\housing.npz', preprocessed_object_file_path='D:\\Github Repos\\House-Price-Prediction\\housing\\artifact\\data_transformation\\2022-07-26-11-14-30\\preprocessed\\preprocessed.pkl')
[2022-07-26 11:14:36,191] INFO - data_transformation.py - 198 - __del__ - ====================Data Transformation log completed.====================
[2022-07-26 11:14:36,191] INFO - config.py - 176 - get_model_trainer_config - Model trainer config: ModelTrainerConfig(trained_model_file_path='D:\\Github Repos\\House-Price-Prediction\\housing\\artifact\\model_trainer\\2022-07-26-11-14-30\\trained_model\\model.pkl', base_accuracy=0.6, model_config_file_path='config\\model.yaml')
[2022-07-26 11:14:36,191] INFO - model_trainer.py - 46 - __init__ - ====================Model trainer log started.====================
[2022-07-26 11:14:36,191] INFO - model_trainer.py - 54 - initiate_model_trainer - Loading transformed training dataset
[2022-07-26 11:14:36,213] INFO - model_trainer.py - 58 - initiate_model_trainer - Loading transformed testing dataset
[2022-07-26 11:14:36,215] INFO - model_trainer.py - 62 - initiate_model_trainer - Splitting training and testing input and target feature
[2022-07-26 11:14:36,215] INFO - model_trainer.py - 66 - initiate_model_trainer - Extracting model config file path
[2022-07-26 11:14:36,215] INFO - model_trainer.py - 69 - initiate_model_trainer - Initializing model factory class using above model config file: config\model.yaml
[2022-07-26 11:14:36,231] INFO - model_trainer.py - 74 - initiate_model_trainer - Expected accuracy: 0.6
[2022-07-26 11:14:36,231] INFO - model_trainer.py - 76 - initiate_model_trainer - Initiating operation model selecttion
[2022-07-26 11:14:36,231] INFO - model_factory.py - 358 - get_best_model - Started Initializing model from config file
[2022-07-26 11:14:36,424] INFO - model_factory.py - 360 - get_best_model - Initialized model: [InitializedModelDetail(model_serial_number='module_0', model=LinearRegression(), param_grid_search={'fit_intercept': [True, False]}, model_name='sklearn.linear_model.LinearRegression'), InitializedModelDetail(model_serial_number='module_1', model=RandomForestRegressor(min_samples_leaf=3), param_grid_search={'min_samples_leaf': [6]}, model_name='sklearn.ensemble.RandomForestRegressor')]
[2022-07-26 11:14:36,424] INFO - model_factory.py - 228 - execute_grid_search_operation - ....................Training LinearRegression....................
[2022-07-26 11:14:36,700] INFO - model_factory.py - 228 - execute_grid_search_operation - ....................Training RandomForestRegressor....................
[2022-07-26 11:16:21,535] INFO - model_factory.py - 345 - get_best_model_from_grid_searched_best_model_list - Acceptable model found:GridSearchedBestModel(model_serial_number='module_0', model=LinearRegression(), best_model=LinearRegression(fit_intercept=False), best_parameters={'fit_intercept': False}, best_score=0.6425567028055794)
[2022-07-26 11:16:21,535] INFO - model_factory.py - 345 - get_best_model_from_grid_searched_best_model_list - Acceptable model found:GridSearchedBestModel(model_serial_number='module_1', model=RandomForestRegressor(min_samples_leaf=3), best_model=RandomForestRegressor(min_samples_leaf=6), best_parameters={'min_samples_leaf': 6}, best_score=0.8042730644293592)
[2022-07-26 11:16:21,535] INFO - model_factory.py - 351 - get_best_model_from_grid_searched_best_model_list - Best model: GridSearchedBestModel(model_serial_number='module_1', model=RandomForestRegressor(min_samples_leaf=3), best_model=RandomForestRegressor(min_samples_leaf=6), best_parameters={'min_samples_leaf': 6}, best_score=0.8042730644293592)
[2022-07-26 11:16:21,535] INFO - model_trainer.py - 81 - initiate_model_trainer - Best model found on training dataset: GridSearchedBestModel(model_serial_number='module_1', model=RandomForestRegressor(min_samples_leaf=3), best_model=RandomForestRegressor(min_samples_leaf=6), best_parameters={'min_samples_leaf': 6}, best_score=0.8042730644293592)
[2022-07-26 11:16:21,535] INFO - model_trainer.py - 83 - initiate_model_trainer - Extracting trained model list.
[2022-07-26 11:16:21,535] INFO - model_trainer.py - 87 - initiate_model_trainer - Evaluation all trained model on training and testing dataset both
[2022-07-26 11:16:21,535] INFO - model_factory.py - 77 - evaluate_regression_model - ====================Started evaluating model: [LinearRegression]====================
[2022-07-26 11:16:21,554] INFO - model_factory.py - 96 - evaluate_regression_model - ====================Score====================
[2022-07-26 11:16:21,554] INFO - model_factory.py - 97 - evaluate_regression_model - Train Score              :[0.6481553634454353]
[2022-07-26 11:16:21,554] INFO - model_factory.py - 98 - evaluate_regression_model - Test Score               :[0.656459976479592]
[2022-07-26 11:16:21,554] INFO - model_factory.py - 99 - evaluate_regression_model - Average Score            :[0.6522812381877459]
[2022-07-26 11:16:21,554] INFO - model_factory.py - 100 - evaluate_regression_model - ====================Loss====================
[2022-07-26 11:16:21,554] INFO - model_factory.py - 101 - evaluate_regression_model - Diff test-train accuracy :[0.008304613034156638].
[2022-07-26 11:16:21,554] INFO - model_factory.py - 102 - evaluate_regression_model - Train RMS_ERROR          :[4709785076.060029].
[2022-07-26 11:16:21,554] INFO - model_factory.py - 103 - evaluate_regression_model - Test RMS_ERROR           :[4477408708.672435].
[2022-07-26 11:16:21,554] INFO - model_factory.py - 119 - evaluate_regression_model - Acceptable model found MetricInfoArtifact(model_name='LinearRegression(fit_intercept=False)', model_object=LinearRegression(fit_intercept=False), train_rmse=4709785076.060029, test_rmse=4477408708.672435, train_accuracy=0.6481553634454353, test_accuracy=0.656459976479592, model_accuracy=0.6522812381877459, index_number=0). 
[2022-07-26 11:16:21,554] INFO - model_factory.py - 77 - evaluate_regression_model - ====================Started evaluating model: [RandomForestRegressor]====================
[2022-07-26 11:16:22,286] INFO - model_factory.py - 96 - evaluate_regression_model - ====================Score====================
[2022-07-26 11:16:22,301] INFO - model_factory.py - 97 - evaluate_regression_model - Train Score              :[0.9037237282462255]
[2022-07-26 11:16:22,302] INFO - model_factory.py - 98 - evaluate_regression_model - Test Score               :[0.819264920915047]
[2022-07-26 11:16:22,302] INFO - model_factory.py - 99 - evaluate_regression_model - Average Score            :[0.8594242905907787]
[2022-07-26 11:16:22,302] INFO - model_factory.py - 100 - evaluate_regression_model - ====================Loss====================
[2022-07-26 11:16:22,302] INFO - model_factory.py - 101 - evaluate_regression_model - Diff test-train accuracy :[0.0844588073311785].
[2022-07-26 11:16:22,303] INFO - model_factory.py - 102 - evaluate_regression_model - Train RMS_ERROR          :[1288752195.6422].
[2022-07-26 11:16:22,303] INFO - model_factory.py - 103 - evaluate_regression_model - Test RMS_ERROR           :[2355547422.8739977].
[2022-07-26 11:16:22,303] INFO - model_trainer.py - 95 - initiate_model_trainer - Best found model on both training and testing dataset.
[2022-07-26 11:16:22,303] INFO - model_trainer.py - 104 - initiate_model_trainer - Saving model at path: D:\Github Repos\House-Price-Prediction\housing\artifact\model_trainer\2022-07-26-11-14-30\trained_model\model.pkl
[2022-07-26 11:16:22,320] INFO - model_trainer.py - 117 - initiate_model_trainer - Model Trainer Artifact: ModelTrainerArtifact(is_trained=True, message='Model Trained successfully', trained_model_file_path='D:\\Github Repos\\House-Price-Prediction\\housing\\artifact\\model_trainer\\2022-07-26-11-14-30\\trained_model\\model.pkl', train_rmse=4709785076.060029, test_rmse=4477408708.672435, train_accuracy=0.6481553634454353, test_accuracy=0.656459976479592, model_accuracy=0.6522812381877459)
[2022-07-26 11:16:22,320] INFO - model_trainer.py - 123 - __del__ - ====================Model trainer log completed.====================
[2022-07-26 11:16:22,320] INFO - config.py - 193 - get_model_evaluation_config - Model Evaluation Config: ModelEvaluationConfig(model_evaluation_file_path='D:\\Github Repos\\House-Price-Prediction\\housing\\artifact\\model_evaluation\\model_evaluation.yaml', time_stamp='2022-07-26-11-14-30').
[2022-07-26 11:16:22,320] INFO - model_evaluation.py - 21 - __init__ - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model Evaluation log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
[2022-07-26 11:16:22,436] INFO - model_evaluation.py - 99 - initiate_model_evaluation - Converting target column into numpy array.
[2022-07-26 11:16:22,436] INFO - model_evaluation.py - 102 - initiate_model_evaluation - Conversion completed target column into numpy array.
[2022-07-26 11:16:22,436] INFO - model_evaluation.py - 105 - initiate_model_evaluation - Dropping target column from the dataframe.
[2022-07-26 11:16:22,442] INFO - model_evaluation.py - 108 - initiate_model_evaluation - Dropping target column from the dataframe completed.
[2022-07-26 11:16:22,442] INFO - model_evaluation.py - 113 - initiate_model_evaluation - Not found any existing model. Hence accepting trained model
[2022-07-26 11:16:22,442] INFO - model_evaluation.py - 59 - update_evaluation_report - Previous eval result: {}
[2022-07-26 11:16:22,442] INFO - model_evaluation.py - 75 - update_evaluation_report - Updated eval result:{'best_model': {'model_path': 'D:\\Github Repos\\House-Price-Prediction\\housing\\artifact\\model_trainer\\2022-07-26-11-14-30\\trained_model\\model.pkl'}}
[2022-07-26 11:16:22,442] INFO - model_evaluation.py - 117 - initiate_model_evaluation - Model accepted. Model eval artifact ModelEvaluationArtifact(is_model_accepted=True, evaluated_model_path='D:\\Github Repos\\House-Price-Prediction\\housing\\artifact\\model_trainer\\2022-07-26-11-14-30\\trained_model\\model.pkl') created
[2022-07-26 11:16:22,442] INFO - model_evaluation.py - 153 - __del__ - ====================Model Evaluation log completed.==================== 
[2022-07-26 11:16:22,442] INFO - config.py - 206 - get_model_pusher_config - Model pusher config ModelPusherConfig(export_dir_path='D:\\Github Repos\\House-Price-Prediction\\saved_models\\20220726111622')
[2022-07-26 11:16:22,442] INFO - model_pusher.py - 15 - __init__ - ====================Model Pusher log started.====================
[2022-07-26 11:16:22,442] INFO - model_pusher.py - 28 - export_model - Exporting model file: [D:\Github Repos\House-Price-Prediction\saved_models\20220726111622\model.pkl]
[2022-07-26 11:16:22,442] INFO - model_pusher.py - 32 - export_model - Trained model: D:\Github Repos\House-Price-Prediction\housing\artifact\model_trainer\2022-07-26-11-14-30\trained_model\model.pkl is copied in export dir:[D:\Github Repos\House-Price-Prediction\saved_models\20220726111622\model.pkl]
[2022-07-26 11:16:22,453] INFO - model_pusher.py - 38 - export_model - Model pusher artifact: [ModelPusherArtifact(is_model_pusher=True, export_model_file_path='D:\\Github Repos\\House-Price-Prediction\\saved_models\\20220726111622\\model.pkl')]
[2022-07-26 11:16:22,453] INFO - model_pusher.py - 50 - __del__ - ====================Model Pusher log completed.====================
[2022-07-26 11:16:22,454] INFO - pipeline.py - 153 - run_pipeline - Model pusher artifact: ModelPusherArtifact(is_model_pusher=True, export_model_file_path='D:\\Github Repos\\House-Price-Prediction\\saved_models\\20220726111622\\model.pkl')
[2022-07-26 11:16:22,454] INFO - pipeline.py - 156 - run_pipeline - Pipeline completed.
[2022-07-26 11:16:22,454] INFO - pipeline.py - 170 - run_pipeline - Pipeline experiment: Experiment(experiment_id='e2638e9c-3ed3-4098-a151-e87fcb2ec58b', initialization_timestamp='2022-07-26-11-14-30', artifact_time_stamp='2022-07-26-11-14-30', running_status=False, start_time=datetime.datetime(2022, 7, 26, 11, 14, 33, 790807), stop_time=datetime.datetime(2022, 7, 26, 11, 16, 22, 454175), execution_time=datetime.timedelta(seconds=108, microseconds=663368), message='Pipeline has been completed.', experiment_file_path='D:\\Github Repos\\House-Price-Prediction\\housing\\artifact\\experiment\\experiment.csv', accuracy=0.6522812381877459, is_model_accepted=True)
